{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/countries-statistics/charts/doughnut-chart/doughnut-chart.component.ts","webpack:///src/app/countries-statistics/charts/doughnut-chart/doughnut-chart.component.html","webpack:///src/app/countries-statistics/charts/line-chart/line-chart.component.ts","webpack:///src/app/countries-statistics/charts/line-chart/line-chart.component.html","webpack:///src/app/countries-statistics/charts/mobile-charts/bar-chart-mobile.component.ts","webpack:///src/app/countries-statistics/charts/mobile-charts/bar-chart-mobile.component.html","webpack:///src/app/countries-statistics/charts/rate-chart/ratechart.component.ts","webpack:///src/app/countries-statistics/charts/rate-chart/ratechart.component.html","webpack:///src/app/countries-statistics/countries-statistics.component.ts","webpack:///src/app/countries-statistics/countries-statistics.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/shared/model/model.ts","webpack:///src/app/shared/utils/charts-utils.ts","webpack:///src/app/shared/utils/render-long-numbers.pipe.ts","webpack:///src/app/shared/utils/utils.ts","webpack:///src/app/world-statistics/world-statistics.component.ts","webpack:///src/app/world-statistics/world-statistics.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","useHash","imports","AppComponent","$gaService","router","appService","title","otherTheme","pageView","event","changeTheme","getEvent","selector","templateUrl","styleUrls","AppModule","Location","provide","useClass","declarations","providers","bootstrap","schemas","AppService","http","headers","getAllCountries","isMobile","window","screen","width","requestOptions","get","country","httpOptions","params","providedIn","DoughnutChartComponent","changeDetectorRef","doughnutChartType","loaded","doughnutChartData","doughnutChartLabels","changes","inputData","undefined","createDoughnutChart","critical","length","cases","criticalCases","push","totalActiveCases","active","others","activeCases","detectChanges","LineChartComponent","lineChartType","lineChartOptions","responsive","responsiveAnimationDuration","scales","yAxes","ticks","beginAtZero","min","max","stepSize","lineChartLegend","lineChartData","lineChartColors","createLineChart","totalCasesDataSet","label","borderColor","backgroundColor","data","getCases","getLimit","newCasesDataSet","criticalCasesDataSet","activeCasesDataSet","recoveredCasesDataSet","newDeathsDataSet","getDeaths","totalDeathsDataSet","updateConfigAsNewObject","dataSet","limit","step","Math","round","lineChart","chart","config","options","ngOnChanges","BarChartMobileComponent","barChartType","barChartOptions","maintainAspectRatio","stepsize","barChartLegend","barChartPlugins","barChartData","barChartColors","createBarChartMobile","slice","barChartLabels","forEach","element","stepLimitArray","barChart","RateChartComponent","rateChartType","rateChartOptions","availableData","key","value","selectedData","rateChartData","rateChartColors","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","rateChartLabels","createRateChart","metric","totalCasesRateChart","newCasesRateChart","totalDeathsRateChart","newDeathsRateChart","downLimit","roundGrowthRate","rateChart","Number","getGrowthRate","CountriesStatisticsComponent","searchFilter","_onDestroy","filteredCountries","timeRanges","dataLabels","valueChanges","pipe","subscribe","filterCountries","setInitialValue","select","compareWith","a","b","countries","response","next","error","errors","selectedCountry","getCountryHistory","selectedTimeRange","setTimeRange","timeRange","countryStat","getChartLabels","getHistory","cleanedData","getCleanedData","reverse","search","toLowerCase","filter","indexOf","complete","selectCountry","FooterComponent","HeaderComponent","color","themeSwitch","currentMode","Modes","LightMode","otherMode","DarkMode","worldStatsLabel","statsByCountryLabel","emitThemeEvent","emit","changeMode","HomeComponent","mobile","tablet","getWorldStats","getTotalCases","el","date","time","totalCases","total","recoveredCases","recovered","newCases","substring","totalDeaths","deaths","newDeaths","CountryRow","day","casesNew","casesTotal","casesActive","casesCritical","casesRecovered","deathsNew","deathsTotal","testsTotal","tests","ChartUtils","cleanData","labels","toString","type","outputData","set","rateData","i","yesterday","today","r","toFixed","RenderLongNumbersPipe","isSigned","str","newStr","remainder","concat","name","pure","Utils","n","temp","floor","limitValue","WorldStatisticsComponent","displayedColumns","dataSource","sortedData","worldStats","countriesData","continentsData","ms","sort","totalCountries","numberOfTabs","getTabs","worldCumulativeStats","isCumulative","isNotCumulative","sortedWorldStats","cumulativeDataSource","start","x","Array","direction","sortData","filteredData","target","filterValue","toLocaleLowerCase","trim","showCountriesOrCumulative","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { WorldStatisticsComponent } from './world-statistics/world-statistics.component';\nimport { CountriesStatisticsComponent } from './countries-statistics/countries-statistics.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'world-stats', component: WorldStatisticsComponent},\n  { path: 'countries-stats', component: CountriesStatisticsComponent},\n  { path: '', redirectTo: '/', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit, SimpleChanges } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Router } from '@angular/router';\nimport { AppService } from './app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit {\n  title = 'covid-api';\n  otherTheme: boolean;\n\n  constructor(protected $gaService: GoogleAnalyticsService, protected router: Router, protected appService: AppService) {\n    this.otherTheme = false;\n  }\n\n  ngOnInit() {\n    this.$gaService.pageView('/', 'covid-stats');\n  }\n\n  changeTheme(){\n    this.otherTheme = !this.otherTheme;\n  }\n\n  getEvent(event){\n    this.changeTheme();\n  }\n}\n","<div [class.dark-theme]=\"otherTheme\" class=\"mat-app-background\">\n  <div class=\"container-fluid\">\n    <header-component [class.dark-theme]=\"otherTheme\" (themeSwitch)=\"getEvent($event)\"></header-component>\n    <div class=\"container-fluid\">\n      <router-outlet class=\"mx-0\"></router-outlet>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTableModule } from '@angular/material/table';\nimport { WorldStatisticsComponent } from './world-statistics/world-statistics.component';\nimport { CountriesStatisticsComponent } from './countries-statistics/countries-statistics.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSelectModule } from '@angular/material/select';\nimport { FooterComponent } from './footer/footer.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { RenderLongNumbersPipe } from './shared/utils/render-long-numbers.pipe';\nimport { ChartsModule } from 'ng2-charts';\nimport { DoughnutChartComponent } from './countries-statistics/charts/doughnut-chart/doughnut-chart.component';\nimport { LineChartComponent } from './countries-statistics/charts/line-chart/line-chart.component';\nimport { RouterModule } from '@angular/router';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { BarChartMobileComponent } from './countries-statistics/charts/mobile-charts/bar-chart-mobile.component';\nimport { NgxGoogleAnalyticsModule, NgxGoogleAnalyticsRouterModule } from 'ngx-google-analytics';\nimport { RateChartComponent } from './countries-statistics/charts/rate-chart/ratechart.component';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    WorldStatisticsComponent,\n    CountriesStatisticsComponent,\n    FooterComponent,\n    RenderLongNumbersPipe,\n    DoughnutChartComponent,\n    LineChartComponent,\n    BarChartMobileComponent,\n    RateChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSlideToggleModule,\n    MatTableModule,\n    MatTabsModule,\n    MatSortModule,\n    MatSelectModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    ChartsModule,\n    RouterModule,\n    NgxMatSelectSearchModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatInputModule,\n    NgxGoogleAnalyticsModule.forRoot('UA-90688399-7'),\n    NgxGoogleAnalyticsRouterModule,\n    AppRoutingModule,\n  ],\n  exports: [RouterModule],\n  providers: [RenderLongNumbersPipe, Location, { provide: LocationStrategy, useClass: HashLocationStrategy }],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class AppService {\n  constructor(private http: HttpClient) {\n    this.getAllCountries();\n    this.isMobile = window.screen.width < 560;\n   }\n  error: string;\n\n  countries: string[];\n  worldStats: any;\n  countryStat: any;\n  isMobile: boolean;\n\n  headers =  {\n    'x-rapidapi-host': 'covid-193.p.rapidapi.com',\n    'x-rapidapi-key': '41644c2f8cmsh4fcb03bb7b5648ap193587jsn102b4f01579c'\n}\n\n  getWorldStats(){\n    const requestOptions = { headers: this.headers };\n      return this.http.get<any>('https://covid-193.p.rapidapi.com/statistics',  requestOptions );\n  }\n\n  getAllCountries(){\n    const requestOptions = { headers: this.headers };\n    return this.http.get<any>('https://covid-193.p.rapidapi.com/countries',  requestOptions);\n  }\n\n  getHistory(country: string){\n    const httpOptions = {\n      headers : this.headers,\n      params: {'country': country }\n    };\n    return this.http.get<any>('https://covid-193.p.rapidapi.com/history', httpOptions);\n  }\n}","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ChangeDetectorRef,\n  SimpleChanges,\n  Input,\n  OnChanges,\n} from '@angular/core';\nimport { Label, BaseChartDirective, MultiDataSet, Color } from 'ng2-charts';\n\n@Component({\n  selector: 'doughnut-component',\n  templateUrl: './doughnut-chart.component.html',\n})\nexport class DoughnutChartComponent implements OnInit, OnChanges {\n  @Input()\n  inputData: any[];\n\n  doughnutChartLabels: Label[];\n  loaded: boolean;\n  @ViewChild(BaseChartDirective, { static: false })\n  doughnutChart: BaseChartDirective;\n  doughnutChartData: MultiDataSet[];\n  doughnutChartType = 'doughnut';\n  totalActiveCases: number;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n    this.loaded = false;\n  }\n\n  ngOnInit(): void {\n    this.doughnutChartData = [];\n    this.doughnutChartLabels = ['Critical cases', 'Other active cases'];\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.inputData !== undefined) {\n      this.doughnutChartData = [];\n      this.createDoughnutChart();\n    }\n  }\n\n  private createDoughnutChart() {\n    let critical = this.inputData[this.inputData.length - 1].cases.critical;\n    let criticalCases: MultiDataSet = [];\n    criticalCases = critical;\n    this.doughnutChartData.push(criticalCases);\n\n    this.totalActiveCases = this.inputData[\n      this.inputData.length - 1\n    ].cases.active;\n    let others: any = this.totalActiveCases - critical;\n    let activeCases: MultiDataSet = [];\n    activeCases = others;\n    this.doughnutChartData.push(activeCases);\n    this.loaded = true;\n    // this allows the linechart update on the UI\n    this.changeDetectorRef.detectChanges();\n  }\n}\n","<div class=\"container mt-5\" *ngIf=\"loaded\">\n  <div class=\"row h4 justify-content-center\">\n    Total active cases {{ totalActiveCases | renderLongNumbers }}\n  </div>\n  <div class=\"row mt-5 mb-5\">\n    <canvas\n      #doughnutChart\n      baseChart\n      [data]=\"doughnutChartData\"\n      [labels]=\"doughnutChartLabels\"\n      [chartType]=\"doughnutChartType\"\n    >\n    </canvas>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ChangeDetectorRef,\n  SimpleChanges,\n  Input,\n  OnChanges,\n} from '@angular/core';\nimport { ChartDataSets } from 'chart.js';\nimport { Color, Label, BaseChartDirective } from 'ng2-charts';\nimport { Utils } from 'src/app/shared/utils/utils';\nimport { ChartUtils } from 'src/app/shared/utils/charts-utils';\n\n@Component({\n  selector: 'linechart-component',\n  templateUrl: './line-chart.component.html',\n})\nexport class LineChartComponent implements OnInit, OnChanges {\n  @Input()\n  inputData: any[];\n  @Input()\n  lineChartLabels: Label[];\n\n  loaded: boolean;\n\n  @ViewChild(BaseChartDirective, { static: false })\n  lineChart: BaseChartDirective;\n\n  lineChartData: ChartDataSets[];\n  lineChartType = 'line';\n  lineChartColors: Color[];\n  lineChartOptions = {\n    responsive: true,\n    responsiveAnimationDuration: 3000,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            min: 0,\n            max: 0,\n            stepSize: 0,\n          },\n        },\n      ],\n    },\n  };\n  \n  lineChartLegend = true;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n    this.loaded = false;\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.inputData !== undefined) {\n      this.lineChartData = [];\n      this.lineChartColors = [];\n      this.createLineChart();\n    }\n  }\n\n  private createLineChart() {\n    // total cases\n    let totalCasesDataSet: ChartDataSets = {};\n    totalCasesDataSet.label = 'Total cases';\n    this.lineChartColors.push({\n      borderColor: 'rgba(38, 51, 33, 1)',\n      backgroundColor: 'rgba(177, 237, 157, .5)',\n    });\n    totalCasesDataSet.data = ChartUtils.getCases(this.inputData, 'total'); \n    this.lineChartData.push(totalCasesDataSet);\n\n    // establish limits based on higher data\n    this.getLimit(totalCasesDataSet.data);\n\n    // new cases\n    let newCasesDataSet: ChartDataSets = {};\n    newCasesDataSet.label = 'New cases';\n    this.lineChartColors.push({\n      borderColor: 'rgba(110, 110, 79, 1)',\n      backgroundColor: 'rgba(227, 227, 163, 1)',\n    });\n    newCasesDataSet.data = ChartUtils.getCases(this.inputData, 'new');\n    this.lineChartData.push(newCasesDataSet);\n    // critical cases\n    let criticalCasesDataSet: ChartDataSets = {};\n    criticalCasesDataSet.label = 'Critical cases';\n    this.lineChartColors.push({\n      borderColor: 'rgba(122, 4, 0, 1)',\n      backgroundColor: 'rgba(201, 104, 101, 1)',\n    });\n    criticalCasesDataSet.data = ChartUtils.getCases(this.inputData, 'critical');\n    this.lineChartData.push(criticalCasesDataSet);\n\n    // active cases\n    let activeCasesDataSet: ChartDataSets = {};\n    activeCasesDataSet.label = 'Active cases';\n    this.lineChartColors.push({\n      borderColor: 'rgba(94, 50, 0, 1)',\n      backgroundColor: 'rgba(255, 140, 8, 1)',\n    });\n    activeCasesDataSet.data = ChartUtils.getCases(this.inputData, 'active');\n    this.lineChartData.push(activeCasesDataSet);\n    \n    // recovered cases\n    let recoveredCasesDataSet: ChartDataSets = {};\n    recoveredCasesDataSet.label = 'Recovered cases';\n    this.lineChartColors.push({\n      borderColor: 'rgba(46, 71, 71, 1)',\n      backgroundColor: 'rgba(144, 232, 229, 1)',\n    });\n    recoveredCasesDataSet.data = ChartUtils.getCases(this.inputData, 'recovered'); \n    this.lineChartData.push(recoveredCasesDataSet);\n\n    // new deaths\n    let newDeathsDataSet: ChartDataSets = {};\n    newDeathsDataSet.label = 'New deaths';\n    this.lineChartColors.push({\n      borderColor: 'rgba(15, 15, 54, 1)',\n      backgroundColor: 'rgba(66, 66, 227, 1)',\n    });\n    newDeathsDataSet.data = ChartUtils.getDeaths(this.inputData, 'new');\n    this.lineChartData.push(newDeathsDataSet);\n\n    // total deaths\n    let totalDeathsDataSet: ChartDataSets = {};\n    totalDeathsDataSet.label = 'Total deaths';\n    this.lineChartColors.push({\n      borderColor: 'rgba(33, 30, 30, 1)',\n      backgroundColor: 'rgba(112, 101, 101, 1)',\n    });\n    totalDeathsDataSet.data = ChartUtils.getDeaths(this.inputData, 'total');\n    this.lineChartData.push(totalDeathsDataSet);\n    this.loaded = true;\n    // detect the baseChart in the DOM after loaded is true\n    this.changeDetectorRef.detectChanges();\n    this.updateConfigAsNewObject(this.lineChartOptions);\n  }\n\n\n  private getLimit(dataSet: any[]) {\n    let limit = 0;\n    let step = 0;\n    limit = Math.max(...dataSet);\n    limit = Utils.round(limit);\n    step = limit/10;\n    this.lineChartOptions.scales.yAxes[0].ticks.max = limit;\n    this.lineChartOptions.scales.yAxes[0].ticks.stepSize = step;\n  }\n\n  private updateConfigAsNewObject(lineChartOptions) {\n    this.lineChart.chart.config.options = lineChartOptions;\n    // update chart options on DOM\n    this.lineChart.ngOnChanges({} as SimpleChanges);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <canvas\n      #lineChart\n      baseChart\n      *ngIf=\"loaded\"\n      [datasets]=\"lineChartData\"\n      [labels]=\"lineChartLabels\"\n      [options]=\"lineChartOptions\"\n      [colors]=\"lineChartColors\"\n      [legend]=\"lineChartLegend\"\n      [chartType]=\"lineChartType\"\n    >\n    </canvas>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ChangeDetectorRef,\n  SimpleChanges,\n  Input,\n  OnChanges,\n} from '@angular/core';\nimport { ChartDataSets } from 'chart.js';\nimport { Color, Label, BaseChartDirective } from 'ng2-charts';\nimport { Utils } from 'src/app/shared/utils/utils';\nimport { ChartUtils } from 'src/app/shared/utils/charts-utils';\n\n@Component({\n  selector: 'bar-chart-mobile-component',\n  templateUrl: './bar-chart-mobile.component.html',\n})\nexport class BarChartMobileComponent implements OnInit, OnChanges {\n  @Input()\n  inputData: any[];\n  @Input()\n  barChartLabels: Label[];\n\n  loaded: boolean;\n  @ViewChild(BaseChartDirective, { static: false })\n  barChart: BaseChartDirective;\n\n  barChartData: ChartDataSets[];\n\n  barChartType = 'bar';\n  barChartColors: Color[];\n\n  barChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    responsiveAnimationDuration: 3000,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n            min: 0,\n            max: 0,\n            stepsize: 0,\n          },\n        },\n      ],\n    },\n  };\n  barChartLegend = true;\n  barChartPlugins = [];\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n    this.loaded = false;\n  }\n\n  ngOnInit(): void {\n    this.barChartData = [];\n    this.barChartColors = [];\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.inputData !== undefined) {\n      this.createBarChartMobile();\n    }\n  }\n\n  private createBarChartMobile() {\n    this.barChartData = [];\n    let totalCasesDataSet: ChartDataSets = {};\n    totalCasesDataSet.label = 'Total cases';\n    this.barChartColors.push({\n      borderColor: 'rgba(38, 51, 33, 1)',\n      backgroundColor: 'rgba(177, 237, 157, .5)',\n    });\n    this.inputData = this.inputData.slice(\n      this.inputData.length - 6,\n      this.inputData.length\n    );\n    this.barChartLabels = this.barChartLabels.slice(\n      this.barChartLabels.length - 6,\n      this.barChartLabels.length\n    );\n    totalCasesDataSet.data = ChartUtils.getCases(this.inputData, 'total');\n    this.barChartData.push(totalCasesDataSet);\n    let limit = 0;\n    let step = 0;\n    // get the upper linit for this chart based on total case max value\n    this.barChartData[0].data.forEach((element) => {\n      if (element > limit) {\n        limit = element;\n      }\n    });\n\n    let stepLimitArray = Utils.round(limit);\n    limit = stepLimitArray[0];\n    step = stepLimitArray[1];\n    this.barChartOptions.scales.yAxes[0].ticks.max = limit;\n    this.barChartOptions.scales.yAxes[0].ticks.stepsize = step;\n\n    let newCasesDataSet: ChartDataSets = {};\n    newCasesDataSet.label = 'New cases';\n    this.barChartColors.push({\n      borderColor: 'rgba(110, 110, 79, 1)',\n      backgroundColor: 'rgba(227, 227, 163, 1)',\n    });\n    newCasesDataSet.data = ChartUtils.getCases(this.inputData, 'new');\n    this.barChartData.push(newCasesDataSet);\n    let criticalCasesDataSet: ChartDataSets = {};\n    criticalCasesDataSet.label = 'Critical cases';\n    this.barChartColors.push({\n      borderColor: 'rgba(122, 4, 0, 1)',\n      backgroundColor: 'rgba(201, 104, 101, 1)',\n    });\n    criticalCasesDataSet.data = ChartUtils.getCases(this.inputData, 'critical');\n    this.barChartData.push(criticalCasesDataSet);\n\n    let activeCasesDataSet: ChartDataSets = {};\n    activeCasesDataSet.label = 'Active cases';\n    this.barChartColors.push({\n      borderColor: 'rgba(94, 50, 0, 1)',\n      backgroundColor: 'rgba(255, 140, 8, 1)',\n    });\n    activeCasesDataSet.data = ChartUtils.getCases(this.inputData, 'active');\n    this.barChartData.push(activeCasesDataSet);\n\n    let recoveredCasesDataSet: ChartDataSets = {};\n    recoveredCasesDataSet.label = 'Recovered cases';\n    this.barChartColors.push({\n      borderColor: 'rgba(46, 71, 71, 1)',\n      backgroundColor: 'rgba(144, 232, 229, 1)',\n    });\n    recoveredCasesDataSet.data = ChartUtils.getCases(this.inputData, 'recovered'); \n    this.barChartData.push(recoveredCasesDataSet);\n\n    let newDeathsDataSet: ChartDataSets = {};\n    newDeathsDataSet.label = 'New deaths';\n    this.barChartColors.push({\n      borderColor: 'rgba(15, 15, 54, 1)',\n      backgroundColor: 'rgba(66, 66, 227, 1)',\n    });\n    newDeathsDataSet.data = ChartUtils.getDeaths(this.inputData, 'new'); \n    this.barChartData.push(newDeathsDataSet);\n\n    let totalDeathsDataSet: ChartDataSets = {};\n    totalDeathsDataSet.label = 'Total deaths';\n    this.barChartColors.push({\n      borderColor: 'rgba(33, 30, 30, 1)',\n      backgroundColor: 'rgba(112, 101, 101, 1)',\n    });\n    totalDeathsDataSet.data =  ChartUtils.getDeaths(this.inputData, 'total');\n    this.barChartData.push(totalDeathsDataSet);\n\n    this.loaded = true;\n    // detect the baseChart in the DOM after loaded is true\n    this.changeDetectorRef.detectChanges();\n    this.updateConfigAsNewObject(this.barChartOptions);\n  }\n\n  updateConfigAsNewObject(lineChartOptions) {\n    this.barChart.chart.config.options = lineChartOptions;\n    // update chart options on DOM\n    this.barChart.ngOnChanges({} as SimpleChanges);\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <canvas\n      #barChart\n      baseChart\n      height=\"500px\" width=\"90%\"\n      *ngIf=\"loaded\"\n      [datasets]=\"barChartData\"\n      [labels]=\"barChartLabels\"\n      [options]=\"barChartOptions\"\n      [colors]=\"barChartColors\"\n      [legend]=\"barChartLegend\"\n      [chartType]=\"barChartType\"\n      [plugins]=\"barChartPlugins\"\n    >\n    </canvas>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ChangeDetectorRef,\n  SimpleChanges,\n  Input,\n  OnChanges,\n} from '@angular/core';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Color, Label, BaseChartDirective } from 'ng2-charts';\nimport { Utils } from 'src/app/shared/utils/utils';\nimport { ChartUtils } from 'src/app/shared/utils/charts-utils';\n\n@Component({\n  selector: 'ratechart-component',\n  templateUrl: './ratechart.component.html',\n})\nexport class RateChartComponent implements OnInit, OnChanges {\n  @Input() inputData: any[];\n  @Input() rateChartLabels: Label[];\n\n  loaded: boolean;\n\n  availableData: any[];\n  selectedData: any;\n\n  rateChartData: ChartDataSets[];\n  rateChartType = 'line';\n  rateChartOptions: ChartOptions = {\n    responsive: true,\n    responsiveAnimationDuration: 3000,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            min: 0,\n            max: 0,\n            stepSize: 0,\n          },\n        },\n      ],\n    },\n  };\n\n  rateChartColors: Color[];\n\n  @ViewChild(BaseChartDirective, { static: false })\n  rateChart: BaseChartDirective;\n\n  constructor(private changeDetectorRef: ChangeDetectorRef) {\n    this.loaded = false;\n  }\n\n  ngOnInit() {\n    this.availableData = [\n      { key: 0, value: 'Total cases' },\n      { key: 1, value: 'New cases' },\n      { key: 2, value: 'Total deaths' },\n      { key: 3, value: 'New deaths' },\n    ];\n    this.selectedData = this.availableData[0];\n    this.rateChartData = [];\n    this.rateChartColors = [\n      {\n        backgroundColor: 'rgba(250, 250, 250, 0.3)',\n        borderColor: 'rgba(163, 163, 72, 0.8)',\n        pointBackgroundColor: 'rgba(163, 163, 72,1)',\n        pointBorderColor: 'rgba(350, 450, 100, 0.7)',\n        pointHoverBackgroundColor: '#000',\n        pointHoverBorderColor: 'rgba(350, 450, 100, 0.8)',\n      },\n    ];\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.inputData !== undefined) {\n      this.rateChartData = [];\n      this.inputData = this.inputData.slice(0).slice(-10);\n      this.rateChartLabels = this.rateChartLabels.slice(1).slice(-9);\n      this.rateChartData = [];\n      this.createRateChart(this.inputData, 0);\n    }\n  }\n\n  private createRateChart(data: any[], metric: number) {\n    if (metric === 0) {\n      this.totalCasesRateChart(data);\n    } else if (metric === 1) {\n      this.newCasesRateChart(data);\n    } else if (metric === 2) {\n      this.totalDeathsRateChart(data);\n    } else if (metric === 3) {\n      this.newDeathsRateChart(data);\n    }\n  }\n\n  private getLimit(dataSet: any[]) {\n    let limit = Math.max(...dataSet);\n    let step = 0;\n    let downLimit = Math.min(...dataSet);\n    if (downLimit < 0) {\n      downLimit = Utils.roundGrowthRate(downLimit * -1) ;\n      this.rateChartOptions.scales.yAxes[0].ticks.min = downLimit * -1;\n    } else {\n      this.rateChartOptions.scales.yAxes[0].ticks.min = 0;\n    }\n    limit = Utils.roundGrowthRate(limit);\n    step = limit / 10;\n    this.rateChartOptions.scales.yAxes[0].ticks.max = limit;\n    this.rateChartOptions.scales.yAxes[0].ticks.stepSize = step;\n  }\n\n  updateConfigAsNewObject(rateChartOptions) {\n    this.rateChart.chart.config.options = rateChartOptions;\n    // update chart options on DOM\n    this.rateChart.ngOnChanges({} as SimpleChanges);\n  }\n\n  selectData(event) {\n    this.rateChartData = [];\n    if (this.selectedData !== undefined) {\n      this.createRateChart(this.inputData, Number(this.selectedData.key));\n    }\n  }\n\n  private totalCasesRateChart(data: any[]) {\n    let totalCasesDataSet: ChartDataSets = {};\n    totalCasesDataSet.label = 'Total cases growth rate';\n    totalCasesDataSet.data = ChartUtils.getCases(this.inputData, 'total');\n    totalCasesDataSet.data = ChartUtils.getGrowthRate(totalCasesDataSet);\n    this.rateChartData.push(totalCasesDataSet);\n    this.getLimit(totalCasesDataSet.data);\n    // detect the baseChart in the DOM after loaded is true\n    this.loaded = true;\n    this.changeDetectorRef.detectChanges();\n    this.updateConfigAsNewObject(this.rateChartOptions);\n  }\n\n  private newCasesRateChart(data: any[]) {\n    let newCasesDataSet: ChartDataSets = {};\n    newCasesDataSet.label = 'New cases growth rate';\n    newCasesDataSet.data = ChartUtils.getCases(this.inputData, 'new');\n    newCasesDataSet.data = ChartUtils.getGrowthRate(newCasesDataSet);\n    this.rateChartData.push(newCasesDataSet);\n    this.getLimit(newCasesDataSet.data);\n    // detect the baseChart in the DOM after loaded is true\n    this.loaded = true;\n    this.changeDetectorRef.detectChanges();\n    this.updateConfigAsNewObject(this.rateChartOptions);\n  }\n\n  private totalDeathsRateChart(data: any[]) {\n    let totalDeathsDataSet: ChartDataSets = {};\n    totalDeathsDataSet.label = 'Total deaths growth rate';\n    totalDeathsDataSet.data = ChartUtils.getDeaths(this.inputData, 'total');\n    totalDeathsDataSet.data = ChartUtils.getGrowthRate(totalDeathsDataSet);\n    this.rateChartData.push(totalDeathsDataSet);\n    this.getLimit(totalDeathsDataSet.data);\n    // detect the baseChart in the DOM after loaded is true\n    this.loaded = true;\n    this.changeDetectorRef.detectChanges();\n    this.updateConfigAsNewObject(this.rateChartOptions);\n  }\n\n  private newDeathsRateChart(data: any[]) {\n    let newDeathsDataSet: ChartDataSets = {};\n    newDeathsDataSet.label = 'New deaths growth rate';\n    newDeathsDataSet.data = ChartUtils.getDeaths(this.inputData, 'new');\n    newDeathsDataSet.data = ChartUtils.getGrowthRate(newDeathsDataSet);\n    this.rateChartData.push(newDeathsDataSet);\n    this.getLimit(newDeathsDataSet.data);\n    // detect the baseChart in the DOM after loaded is true\n    this.loaded = true;\n    this.changeDetectorRef.detectChanges();\n    this.updateConfigAsNewObject(this.rateChartOptions);\n  }\n}\n","<div class=\"container mt-5\" *ngIf=\"loaded\">\n  <div class=\"row align-items-baseline\">\n    <div class=\"col text-right\">\n      <p>Growth rate</p>\n    </div>\n    <div class=\"col\">\n      <mat-form-field>\n        <mat-select\n          [(ngModel)]=\"selectedData\"\n          #select\n          (selectionChange)=\"selectData($event)\"\n        >\n          <mat-option> </mat-option>\n          <mat-option *ngFor=\"let option of availableData\" [value]=\"option\">\n            {{ option.value }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"row\">\n    <canvas\n      #rateChart\n      baseChart\n      width=\"400\"\n      height=\"400\"\n      [datasets]=\"rateChartData\"\n      [labels]=\"rateChartLabels\"\n      [options]=\"rateChartOptions\"\n      [colors]=\"rateChartColors\"\n      [chartType]=\"rateChartType\"\n    ></canvas>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { AppService } from '../app.service';\nimport { MatSelect } from '@angular/material/select';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { ChartUtils } from '../shared/utils/charts-utils';\n\n@Component({\n  selector: 'app-countries-statistics',\n  templateUrl: './countries-statistics.component.html',\n  styleUrls: ['./countries-statistics.component.css'],\n})\nexport class CountriesStatisticsComponent implements OnInit, AfterViewInit {\n  error: string;\n\n  countries: string[];\n\n  selectedCountry: string;\n  selectedTimeRange: number;\n  inputData: any[];\n  dataLabels: any[];\n  loaded: boolean;\n  isMobile: boolean;\n  timeRanges: any[]\n\n  searchFilter = new FormControl('');\n\n  protected _onDestroy = new Subject<void>();\n\n  filteredCountries: ReplaySubject<string[]> = new ReplaySubject<string[]>(1);\n\n  @ViewChild('select', { static: true }) select: MatSelect;\n\n  constructor(private appService: AppService) {\n    this.isMobile = appService.isMobile;\n    this.timeRanges = [ \n      {\n        value: 10,\n        label: 'Last 10 days'\n      }, \n      {\n        value: 20,\n        label: 'Last 20 days'\n      }, \n      {\n        value: 30,\n        label: 'Last 30 days'\n      }, \n      {\n        value: 40,\n        label: 'Last 40 days'\n      }\n    ];\n  }\n\n  ngOnInit(): void {\n    this.getAllCountries();\n    this.dataLabels = [];\n    this.searchFilter.valueChanges\n      .pipe(takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.filterCountries();\n      });\n  }\n\n  ngAfterViewInit() {\n    this.setInitialValue();\n  }\n\n  protected setInitialValue() {\n    this.filteredCountries\n      .pipe(take(1), takeUntil(this._onDestroy))\n      .subscribe(() => {\n        this.select.compareWith = (a: string, b: string) => a && b && a === b;\n      });\n  }\n\n  private getAllCountries() {\n    this.appService.getAllCountries().subscribe(\n      (data) => {\n        this.countries = data.response;\n        this.filteredCountries.next(this.countries.slice());\n        this.loaded = true;\n      },\n      (data) => {\n        this.error = data.errors;\n      }\n    );\n  }\n\n  selectCountry(event) {\n    this.selectedCountry = event.value;\n    this.getCountryHistory(event.value);\n  }\n\n  selectTimeRange(event) {\n    this.selectedTimeRange = event.value;\n    this.setTimeRange(event.value);\n  }\n\n  private setTimeRange(timeRange: number) {\n    this.inputData = this.appService.countryStat.slice(0, timeRange);\n    this.dataLabels = ChartUtils.getChartLabels(this.inputData);\n  }\n\n  private getCountryHistory(country: string) {\n    this.loaded = false;\n    this.appService.getHistory(country).subscribe(\n      (data) => {\n        let cleanedData = ChartUtils.getCleanedData(data.response);\n        // initializa time range to 40\n        this.selectedTimeRange = 40;\n        this.inputData = cleanedData.slice(0, this.selectedTimeRange).reverse();\n        this.appService.countryStat = this.inputData;\n        this.dataLabels = ChartUtils.getChartLabels(this.inputData);\n        this.loaded = true;\n      },\n      (data) => {\n        this.error = data.errors;\n      }\n    );\n  }\n\n  protected filterCountries() {\n    if (!this.countries) {\n      return;\n    }\n    let search = this.searchFilter.value;\n    if (!search) {\n      this.filteredCountries.next(this.countries.slice());\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    this.filteredCountries.next(\n      this.countries.filter(\n        (country) => country.toLowerCase().indexOf(search) > -1\n      )\n    );\n  }\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row mt-3 justify-content-center\">\n    <div *ngIf=\"!loaded\">\n      <mat-spinner></mat-spinner>\n    </div>\n  </div>\n  <div class=\"row mt-5\">\n    <div class=\"col m-3 text-center\">\n      <mat-form-field>\n        <mat-label>Select the country</mat-label>\n        <mat-select #select (selectionChange)=\"selectCountry($event)\">\n          <mat-option>\n            <ngx-mat-select-search\n              [formControl]=\"searchFilter\"\n              placeholderLabel=\"\"\n              noEntriesFoundLabel=\"no country found\"\n            ></ngx-mat-select-search>\n          </mat-option>\n          <mat-option\n            *ngFor=\"let country of filteredCountries | async\"\n            [value]=\"country\"\n          >\n            {{ country }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div *ngIf=\"!isMobile\" class=\"col m-3 text-center\">\n      <mat-form-field>\n        <mat-label>Select the time range</mat-label>\n        <mat-select\n          [(value)]=\"selectedTimeRange\"\n          #select\n          (selectionChange)=\"selectTimeRange($event)\"\n        >\n          <mat-option *ngFor=\"let range of timeRanges\" [value]=\"range.value\">\n            {{ range.label }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"row mt-5\">\n    <div *ngIf=\"!isMobile\" class=\"col h3 text-center align-self-center\">\n      {{ selectedCountry }}\n    </div>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <!--DESKTOP CHART-->\n  <linechart-component\n    *ngIf=\"!isMobile\"\n    [lineChartLabels]=\"dataLabels\"\n    [inputData]=\"inputData\"\n  ></linechart-component>\n  <!--MOBILE CHART-->\n  <bar-chart-mobile-component\n    *ngIf=\"isMobile\"\n    [barChartLabels]=\"dataLabels\"\n    [inputData]=\"inputData\"\n  ></bar-chart-mobile-component>\n\n  <!--DOUGHNUT CHART-->\n  <div class=\"container doughnut-chart\">\n    <doughnut-component [inputData]=\"inputData\"> </doughnut-component>\n  </div>\n\n  <!-- RATE CHART-->\n  <div class=\"container rate-chart\">\n    \n    <ratechart-component\n      [inputData]=\"inputData\"\n      [rateChartLabels]=\"dataLabels\"\n    ></ratechart-component>\n\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'footer-component',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"small m-3\">\n      Icons made by\n      <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\"\n        >Freepik</a\n      >\n      from\n      <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'header-component',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  color: ThemePalette = 'primary';\n\n  worldStatsLabel: string;\n  statsByCountryLabel: string;\n\n  otherMode: string;\n  currentMode: string;\n\n  @Output()\n  themeSwitch = new EventEmitter();\n\n  constructor() {\n    this.currentMode = Modes.LightMode;\n    this.otherMode = Modes.DarkMode;\n    this.worldStatsLabel = 'World statistics';\n    this.statsByCountryLabel = 'Stats by country';\n  }\n\n  ngOnInit(): void {}\n\n  changeMode() {\n    this.otherMode = this.currentMode;\n    if (this.currentMode === Modes.LightMode) {\n      this.currentMode = Modes.DarkMode;\n    } else {\n      this.currentMode = Modes.LightMode;\n    }\n\n    this.emitThemeEvent();\n  }\n\n  private emitThemeEvent() {\n    this.themeSwitch.emit(this.currentMode);\n  }\n}\nenum Modes {\n  LightMode = 'Light Mode',\n  DarkMode = 'Dark Mode',\n}\n","<div class=\"container-fluid w-100\">\n  <nav class=\"navbar navbar-expand-lg navbar-light\">\n    <button\n      id=\"button\"\n      class=\"navbar-toggler dark-theme-class\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarToggler\"\n      aria-controls=\"navbarToggler\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarToggler\">\n      <a\n        id=\"text\"\n        class=\"navbar-brand dark-theme-class\"\n        data-toggle=\"collapse\"\n        data-target=\".navbar-collapse.show\"\n        href=\"#\"\n        >Corona stats</a\n      >\n      <ul class=\"nav nav-tabs navbar-nav mr-auto mt-2 mt-lg-0\">\n        <li class=\"nav-item active\">\n          <a\n            id=\"text\"\n            class=\"nav-link dark-theme-class\"\n            data-toggle=\"collapse\"\n            data-target=\".navbar-collapse.show\"\n            [routerLink]=\"['/']\"\n            >Home <span class=\"sr-only\">(current)</span></a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a\n            id=\"text\"\n            class=\"nav-link dark-theme-class\"\n            data-toggle=\"collapse\"\n            data-target=\".navbar-collapse.show\"\n            [routerLink]=\"['world-stats']\"\n            >{{ worldStatsLabel }}</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a\n            id=\"text\"\n            class=\"nav-link dark-theme-class\"\n            data-toggle=\"collapse\"\n            data-target=\".navbar-collapse.show\"\n            [routerLink]=\"['countries-stats']\"\n            >{{ statsByCountryLabel }}</a\n          >\n        </li>\n      </ul>\n    </div>\n    <div>\n      <mat-slide-toggle\n        class=\"p-3, m-3\"\n        [color]=\"color\"\n        (toggleChange)=\"changeMode()\"\n        >Switch to {{ otherMode }}</mat-slide-toggle\n      >\n    </div>\n  </nav>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'home-component',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  totalCases: string;\n  newCases: string;\n  activeCases: string;\n  criticalCases: string;\n  recoveredCases: string;\n  newDeaths: string;\n  totalDeaths: string;\n  tests: string;\n  date: Date;\n\n  error: any;\n\n  mobile: boolean;\n  tablet: boolean;\n  loaded: boolean;\n\n  constructor(private appService: AppService) {\n    this.loaded = false;\n  }\n\n  ngOnInit() {\n    this.mobile = ( window.screen.width < 360);\n    this.tablet = ( window.screen.width < 790 && window.screen.width >= 360);\n    this.getWorldStats();\n  }\n\n  private getWorldStats() {\n    this.appService.getWorldStats().subscribe(\n      (data) => {\n        this.getTotalCases(data.response);\n      },\n      (data) => {\n        this.error = data.errors;\n      }\n    );\n  }\n\n  private getTotalCases(data: any[]) {\n    data.forEach((el) => {\n      if (el.country === 'All') {\n        this.date = el.time;\n        this.totalCases = el.cases.total;\n        this.activeCases = el.cases.active;\n        this.criticalCases = el.cases.critical;\n        this.recoveredCases = el.cases.recovered;\n        this.newCases = el.cases.new.substring(1);\n        this.totalDeaths = el.deaths.total;\n        this.newDeaths = el.deaths.new.substring(1);\n        // this.tests = this.renderLongNumbers(el.tests.total); comes as undefined at the moment\n        this.loaded = true;\n      }\n    });\n  }\n\n\n  \n}\n","<div class=\"container-fluid dark-theme-class\" id=\"background-image\">\n  <div class=\"row m-3\">\n    <div class=\"col\">\n      <p class=\"h4\">Last update: {{ date | date: \"short\" }}</p>\n    </div>\n  </div>\n\n  <div *ngIf=\"!loaded\">\n    <mat-spinner></mat-spinner>\n  </div>\n\n  <div\n    class=\"row justify-content-center mt-3\"\n    *ngIf=\"!mobile && !tablet && loaded\"\n  >\n    <div class=\"col text-center\">\n      <p class=\"display-4\">Total cases: {{ totalCases | renderLongNumbers }}</p>\n      <p class=\"display-4\">New cases: + {{ newCases | renderLongNumbers }}</p>\n      <p class=\"display-4\">\n        Recovered: {{ recoveredCases | renderLongNumbers }}\n      </p>\n      <p class=\"display-4\">\n        Active cases: {{ activeCases | renderLongNumbers }}\n      </p>\n      <p class=\"display-4\">\n        Critical cases: {{ criticalCases | renderLongNumbers }}\n      </p>\n      <p class=\"display-4\">New deaths: + {{ newDeaths | renderLongNumbers }}</p>\n      <p class=\"display-4\">\n        Total deaths: {{ totalDeaths | renderLongNumbers }}\n      </p>\n      <p *ngIf=\"tests\" class=\"display-4\">\n        Tests: {{ tests | renderLongNumbers }}\n      </p>\n    </div>\n  </div>\n\n  <div class=\"row justify-content-center mt-3\" *ngIf=\"tablet && loaded\">\n    <div class=\"col text-center\">\n      <p class=\"h4\">Total cases: {{ totalCases | renderLongNumbers }}</p>\n      <p class=\"h4\">New cases: + {{ newCases | renderLongNumbers }}</p>\n      <p class=\"h4\">Recovered: {{ recoveredCases | renderLongNumbers }}</p>\n      <p class=\"h4\">Active cases: {{ activeCases | renderLongNumbers }}</p>\n      <p class=\"h4\">Critical cases: {{ criticalCases | renderLongNumbers }}</p>\n      <p class=\"h4\">New deaths: + {{ newDeaths | renderLongNumbers }}</p>\n      <p class=\"h4\">Total deaths: {{ totalDeaths | renderLongNumbers }}</p>\n      <p *ngIf=\"tests\" class=\"h4\">Tests: {{ tests | renderLongNumbers }}</p>\n    </div>\n  </div>\n\n  <div class=\"row justify-content-center mt-3\" *ngIf=\"mobile\">\n    <div class=\"col text-center\">\n      <p>Total cases: {{ totalCases | renderLongNumbers }}</p>\n      <p>New cases: + {{ newCases | renderLongNumbers }}</p>\n      <p>Recovered: {{ recoveredCases | renderLongNumbers }}</p>\n      <p>Active cases: {{ activeCases | renderLongNumbers }}</p>\n      <p>Critical cases: {{ criticalCases | renderLongNumbers }}</p>\n      <p>New deaths: + {{ newDeaths | renderLongNumbers }}</p>\n      <p>Total deaths: {{ totalDeaths | renderLongNumbers }}</p>\n      <p *ngIf=\"tests\">Tests: {{ tests | renderLongNumbers }}</p>\n    </div>\n  </div>\n</div>\n","import { Label } from 'ng2-charts';\nimport { ChartDataSets } from 'chart.js';\n\nexport class CountryRow {\n  country?: string;\n  day?: Date;\n  casesNew?: number;\n  casesActive?: number;\n  casesCritical?: number;\n  casesRecovered?: number;\n  casesTotal?: number;\n  deathsNew?: number;\n  deathsTotal?: number;\n  testsTotal?: number;\n\n  constructor (data: any){\n    this.country = data.country;\n    this.day = data.day;\n    this.casesNew = data.cases.new;\n    this.casesTotal = data.cases.total;\n    this.casesActive = data.cases.active;\n    this.casesCritical = data.cases.critical;\n    this.casesRecovered = data.cases.recovered;\n    this.deathsNew = data.deaths.new;\n    this.deathsTotal = data.deaths.total;\n    this.testsTotal = data.tests.total;\n  }\n}\n","import { Label } from 'ng2-charts';\n\nexport class ChartUtils {\n  /**\n   * The country data are copied in another array,\n   * check for same days data\n   * @param data the country data\n   */\n  public static getCleanedData(data: any[]) {\n    let cleanData = [];\n    let labels = [];\n    data.forEach((element) => {\n      const day = element.day.toString().substring(5);\n      if (labels.indexOf(day) === -1) {\n        labels.push(day);\n        cleanData.push(element);\n      }\n    });\n    return cleanData;\n  }\n\n  /**\n   * Returns an array of labels for\n   * the chart\n   * @param data\n   */\n  public static getChartLabels(data: any[]) {\n    let labels: Label[] = [];\n    data.forEach((element) => {\n      const day = element.day.toString().substring(5);\n      if (labels.indexOf(day) === -1) {\n        labels.push(day);\n      }\n    });\n    return labels;\n  }\n\n  /**\n   * Takes an array of country data, and parses the cases,\n   * according the needed type of cases.\n   * Returns the ChartDataSet\n   * @param inputData the country data\n   * @param type type of cases\n   */\n  public static getCases(inputData: any[], type: string) {\n    let outputData = [];\n    let date;\n    inputData.forEach((element) => {\n      if (date === undefined) {\n        date = element.day;\n      } else {\n        if (date === element.day) {\n          return;\n        } else {\n          date = element.day;\n        }\n      }\n      if (element.cases[type]) {\n        if (type === 'new') {\n          let value = Number(element.cases[type].substring(1));\n          outputData.push(value);\n        } else {\n          outputData.push(element.cases[type]);\n        }\n      } else {\n        outputData.push(0);\n      }\n    });\n    return outputData;\n  }\n\n  /**\n   * Takes an array of country data, and parses the deaths,\n   * according the needed type of deaths.\n   * Returns the ChartDataSet\n   * @param inputData the country data\n   * @param type of deaths\n   */\n  public static getDeaths(inputData: any[], type: string) {\n    let outputData = [];\n    let date;\n    inputData.forEach((element) => {\n      // control not to insert more data for the same day\n      if (date === undefined) {\n        date = element.day;\n      } else {\n        if (date === element.day) {\n          return;\n        } else {\n          date = element.day;\n        }\n      }\n      if (element.deaths[type]) {\n        if (type === 'new') {\n          let value = Number(element.deaths[type].substring(1));\n          outputData.push(value);\n        } else {\n          outputData.push(element.deaths[type]);\n        }\n      } else {\n        outputData.push(0);\n      }\n    });\n    return outputData;\n  }\n\n  /**\n   * Takes a chartdataset and returns the\n   * growth rate for that sequence\n   * @param set a chartdataset\n   */\n  public static getGrowthRate(set: any) {\n    const data: number[] = set.data as number[];\n    let rateData = [];\n    for (let i = 0; i < data.length - 1; i++) {\n      let yesterday = Number(data[i]);\n      let today = Number(data[i + 1]);\n      let r =\n        ((today ? today : 1) - (yesterday ? yesterday : today)) /\n        (yesterday ? yesterday : 1);\n      r *= 100;\n      r = Number(r.toFixed(2));\n      rateData[i] = r;\n    }\n    return rateData;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'renderLongNumbers', pure: false })\nexport class RenderLongNumbersPipe implements PipeTransform {\n  transform(value: any): string {\n    let isSigned = false;\n    if (value === null) {\n      return '';\n    }\n    if (value[0] === '+') {\n      isSigned = true;\n      value = value.substring(1);\n    }\n    let str = value.toString();\n    let newStr = '';\n    let remainder = str.length % 3;\n    let i = remainder;\n    if (remainder !== 0) {\n      newStr = newStr + str.substring(0, remainder);\n      if (str.substring(remainder).length >= 3) {\n        newStr += \",\";\n      }\n    }\n    for (i; i < str.length; i += 3) {\n      newStr += str.substring(i, i + 3);\n      if (str.length - i <= 3) {\n        continue;\n      }\n      newStr += \",\";\n    }\n    if (isSigned) {\n      newStr = '+ '.concat(newStr);\n      return newStr;\n    }\n    return newStr;\n  }\n}\n","export class Utils {\n  \n\n  /**\n   * Takes the number, which is a decimal,\n   * and gives back the upper (and lower) \n   * limit for the chart and the step size\n   * @param n number to round to limit\n   */\n  public static roundGrowthRate(n: number) {\n    let temp = Math.floor(n);\n    let limitValue = '1';\n    for (let i = 0; i < temp.toString(10).length; i++) {\n      limitValue += '0';\n    }\n    let limit = Number(limitValue);\n    if (limit > n * 2) {\n      limit /= 2;\n    }\n    return limit;\n  }\n\n  /**\n   * Takes the number and gives back \n   * the upper (and lower) limit for the chart\n   * and the step size\n   * @param n number to round to limit\n   */\n  public static round(n: number) {\n    let limitValue = '1';\n    for (let i = 0; i < n.toString(10).length; i++) {\n      limitValue += '0';\n    }\n    let limit = Number(limitValue);\n    if (limit > n * 4) {\n      limit /= 4;\n    }\n    if (limit > n * 2) {\n      limit /= 2;\n    }\n    return limit;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort, Sort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AppService } from '../app.service';\nimport { CountryRow } from '../shared/model/model';\n\n@Component({\n  selector: 'app-world-statistics',\n  templateUrl: './world-statistics.component.html',\n  styleUrls: ['./world-statistics.component.css'],\n})\nexport class WorldStatisticsComponent {\n  error: string;\n  dataSource: any;\n  sortedData: any;\n  numberOfTabs: number;\n  totalCountries: number;\n\n  // AGGIUNGI COLONNE PER RAPPORTI TODO\n  displayedColumns: string[] = [\n    'country',\n    'casesTotal',\n    'casesNew',\n    'casesActive',\n    'casesCritical',\n    'casesRecovered',\n    'deathsNew',\n    'deathsTotal',\n    'testsTotal',\n  ];\n\n  date: any;\n\n  private sort: MatSort;\n  @ViewChild(MatSort) set matSort(ms: MatSort) {\n    this.sort = ms;\n  }\n\n  mobile: boolean;\n\n  worldStats: CountryRow[];\n  sortedWorldStats: CountryRow[];\n  loaded: boolean;\n\n  worldCumulativeStats: CountryRow[];\n\n  countriesData: boolean;\n  continentsData: boolean;\n\n  cumulativeDataSource: any;\n\n\n  constructor(private appService: AppService) {\n    this.dataSource = [];\n    this.sortedData = [];\n    this.worldStats = [];\n    this.getWorldStats();\n    this.countriesData = true;\n    this.continentsData = false;\n    this.mobile = appService.isMobile;\n  }\n\n\n  private getWorldStats() {\n    this.appService.getWorldStats().subscribe(\n      (data) => {\n        this.totalCountries = data.response.length;\n        this.numberOfTabs = this.getTabs(this.totalCountries);\n        this.date = data.response[0].time;\n        for (let i = 0; i < data.response.length; i++) {\n          this.worldStats.push(new CountryRow(data.response[i]));\n        }\n        this.worldCumulativeStats = this.worldStats.filter(isCumulative);\n        this.worldStats = this.worldStats.filter(isNotCumulative);\n        this.totalCountries -= this.worldCumulativeStats.length;\n        this.sortedWorldStats = this.worldStats;\n        this.cumulativeDataSource = new MatTableDataSource(this.worldCumulativeStats);\n        for (\n          let i = 0, start = 0, limit = 49;\n          i < this.numberOfTabs;\n          i++, start += 50, limit += 50\n        ) {\n          this.dataSource[i] = new MatTableDataSource(\n            this.worldStats.slice(start, limit)\n          );\n          this.dataSource[i].sort = this.sort;\n          this.sortedData[i] = new MatTableDataSource(\n            this.worldStats.slice(start, limit)\n          );\n          this.sortedData[i].sort = this.sort;\n          this.loaded = true;\n        }\n      },\n      (data) => {\n        this.error = data.errors;\n      }\n    );\n  }\n\n  private getTabs(x: number) {\n    let numberOfTabs = Math.floor(x / 50);\n    if (x % 50 !== 0) {\n      numberOfTabs++;\n    }\n    return numberOfTabs;\n  }\n\n  counter(n: number) {\n    return new Array(n);\n  }\n\n  getLabels(i: number) {\n    switch (i) {\n      case 0:\n        return '1 - 50';\n      case 1:\n        return '51 - 100';\n      case 2:\n        return '101 - 150';\n      case 3:\n        return '151 - 200';\n      case 4:\n        return '201 - ' + this.totalCountries;\n    }\n  }\n\n  sortData(sort: Sort, i: number) {\n    const data = this.dataSource[i];\n    if (!sort.active || sort.direction === '') {\n      this.sortedData[i] = data;\n      return;\n    }\n    this.sortedData[i] = new MatTableDataSource(\n      data.sortData(data.filteredData, sort)\n    );\n  }\n\n  applyFilter(event) {\n    if (event.target.value == '') {\n      this.worldStats = this.sortedWorldStats;\n      return this.worldStats;\n    }\n    const filterValue = event.target.value;\n    this.worldStats = this.sortedWorldStats.filter((element) => {\n      return (\n        element.country\n          .toLocaleLowerCase()\n          .indexOf(filterValue.trim().toLowerCase()) != -1\n      );\n    });\n  }\n\n  showCountriesOrCumulative(event) {\n    this.countriesData = (event.target.value === 'countriesData');\n    this.continentsData = (event.target.value === 'cumulativeData');\n  }\n\n}\n\nfunction isCumulative(element) {\n  if (\n    element.country === 'Asia' ||\n    element.country === 'Europe' ||\n    element.country === 'North-America' ||\n    element.country === 'Oceania' ||\n    element.country === 'Africa' ||\n    element.country === 'South-America' ||\n    element.country === 'All'\n  ) {\n    return element;\n  }\n}\n\nfunction isNotCumulative(element) {\n  if (\n    element.country !== 'Asia' &&\n    element.country !== 'Europe' &&\n    element.country !== 'North-America' &&\n    element.country !== 'Oceania' &&\n    element.country !== 'Africa' &&\n    element.country !== 'South-America' &&\n    element.country !== 'All'\n  ) {\n    return element;\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"m-3 h4\">Last update {{ date | date: \"short\" }}</div>\n    </div>\n    <div class=\"col p-3 text-center\">\n      <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        <label class=\"btn btn-secondary active\">\n          <input\n            (click)=\"showCountriesOrCumulative($event)\"\n            value=\"countriesData\"\n            type=\"radio\"\n            autocomplete=\"off\"\n            checked\n          />\n          Countries\n        </label>\n        <label class=\"btn btn-secondary\">\n          <input\n            type=\"radio\"\n            (click)=\"showCountriesOrCumulative($event)\"\n            value=\"cumulativeData\"\n            autocomplete=\"off\"\n          />\n          Continents\n        </label>\n      </div>\n    </div>\n  </div>\n  <div *ngIf=\"!loaded\">\n    <mat-spinner></mat-spinner>\n  </div>\n</div>\n\n<!-- DESKTOP VERSION, COUNTRIES DATA-->\n<div class=\"container-fluid\" *ngIf=\"!mobile && countriesData\">\n  <mat-tab-group>\n    <mat-tab *ngFor=\"let number of counter(numberOfTabs); index as i\">\n      <ng-template mat-tab-label>\n        {{ getLabels(i) }}\n      </ng-template>\n\n      <div class=\"container-fluid\">\n        <table\n          matSort\n          (matSortChange)=\"sortData($event, i)\"\n          mat-table\n          [dataSource]=\"sortedData[i]\"\n          class=\"w-100 mat-elevation-z8\"\n        >\n          <ng-container matColumnDef=\"country\">\n            <th\n              mat-sort-header\n              class=\"text-uppercase\"\n              mat-header-cell\n              *matHeaderCellDef\n            >\n              Country\n            </th>\n            <td mat-cell *matCellDef=\"let element\">{{ element.country }}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"casesTotal\">\n            <th\n              mat-sort-header\n              class=\"text-uppercase\"\n              mat-header-cell\n              *matHeaderCellDef\n            >\n              Total cases\n            </th>\n            <td class=\"text-center\" mat-cell *matCellDef=\"let element\">\n              {{ element.casesTotal | renderLongNumbers }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"casesNew\">\n            <th\n              mat-sort-header\n              class=\"text-uppercase\"\n              mat-header-cell\n              *matHeaderCellDef\n            >\n              New cases\n            </th>\n            <td\n              id=\"background-color-warning\"\n              class=\"text-center table-warning dark-theme-class\"\n              mat-cell\n              *matCellDef=\"let element\"\n            >\n              {{ element.casesNew | renderLongNumbers }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"casesActive\">\n            <th\n              mat-sort-header\n              class=\"text-uppercase\"\n              mat-header-cell\n              *matHeaderCellDef\n            >\n              Active cases\n            </th>\n            <td class=\"text-center\" mat-cell *matCellDef=\"let element\">\n              {{ element.casesActive | renderLongNumbers }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"casesCritical\">\n            <th\n              mat-sort-header\n              class=\"text-uppercase\"\n              mat-header-cell\n              *matHeaderCellDef\n            >\n              Critical cases\n            </th>\n            <td class=\"text-center\" mat-cell *matCellDef=\"let element\">\n              {{ element.casesCritical | renderLongNumbers }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"casesRecovered\">\n            <th\n              mat-sort-header\n              class=\"text-uppercase\"\n              mat-header-cell\n              *matHeaderCellDef\n            >\n              Recovered\n            </th>\n            <td\n              id=\"background-color-success\"\n              class=\"text-center table-success dark-theme-class\"\n              mat-cell\n              *matCellDef=\"let element\"\n            >\n              {{ element.casesRecovered | renderLongNumbers }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"deathsNew\">\n            <th\n              mat-sort-header\n              class=\"text-uppercase\"\n              mat-header-cell\n              *matHeaderCellDef\n            >\n              New deaths\n            </th>\n            <td class=\"text-center\" mat-cell *matCellDef=\"let element\">\n              {{ element.deathsNew | renderLongNumbers }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"deathsTotal\">\n            <th\n              mat-sort-header\n              class=\"text-uppercase\"\n              mat-header-cell\n              *matHeaderCellDef\n            >\n              Total deaths\n            </th>\n            <td\n              id=\"background-color-danger\"\n              class=\"table-danger text-center dark-theme-class\"\n              mat-cell\n              *matCellDef=\"let element\"\n            >\n              {{ element.deathsTotal | renderLongNumbers }}\n            </td>\n          </ng-container>\n          <ng-container matColumnDef=\"testsTotal\">\n            <th\n              mat-sort-header\n              class=\"text-uppercase\"\n              mat-header-cell\n              *matHeaderCellDef\n            >\n              Total tests\n            </th>\n            <td class=\"text-center\" mat-cell *matCellDef=\"let element\">\n              {{ element.testsTotal | renderLongNumbers }}\n            </td>\n          </ng-container>\n          <tr\n            mat-header-row\n            *matHeaderRowDef=\"displayedColumns; sticky: true\"\n          ></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n      </div>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n\n<!-- DESKTOP VERSION, CUMULATIVE-->\n<div class=\"container-fluid\" *ngIf=\"!mobile && continentsData\">\n  <table\n    mat-table\n    [dataSource]=\"cumulativeDataSource\"\n    class=\"w-100 mat-elevation-z8\"\n  >\n    <ng-container matColumnDef=\"country\">\n      <th class=\"text-uppercase\" mat-header-cell *matHeaderCellDef>\n        Country\n      </th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.country }}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"casesTotal\">\n      <th class=\"text-uppercase\" mat-header-cell *matHeaderCellDef>\n        Total cases\n      </th>\n      <td class=\"text-center\" mat-cell *matCellDef=\"let element\">\n        {{ element.casesTotal | renderLongNumbers }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"casesNew\">\n      <th class=\"text-uppercase\" mat-header-cell *matHeaderCellDef>\n        New cases\n      </th>\n      <td id=\"background-color-warning\" class=\"text-center table-warning dark-theme-class\" mat-cell *matCellDef=\"let element\">\n        {{ element.casesNew | renderLongNumbers }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"casesActive\">\n      <th class=\"text-uppercase\" mat-header-cell *matHeaderCellDef>\n        Active cases\n      </th>\n      <td class=\"text-center\" mat-cell *matCellDef=\"let element\">\n        {{ element.casesActive | renderLongNumbers }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"casesCritical\">\n      <th class=\"text-uppercase\" mat-header-cell *matHeaderCellDef>\n        Critical cases\n      </th>\n      <td class=\"text-center\" mat-cell *matCellDef=\"let element\">\n        {{ element.casesCritical | renderLongNumbers }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"casesRecovered\">\n      <th class=\"text-uppercase\" mat-header-cell *matHeaderCellDef>\n        Recovered\n      </th>\n      <td id=\"background-color-success\" class=\"text-center table-success dark-theme-class\" mat-cell *matCellDef=\"let element\">\n        {{ element.casesRecovered | renderLongNumbers }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"deathsNew\">\n      <th class=\"text-uppercase\" mat-header-cell *matHeaderCellDef>\n        New deaths\n      </th>\n      <td class=\"text-center\" mat-cell *matCellDef=\"let element\">\n        {{ element.deathsNew | renderLongNumbers }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"deathsTotal\">\n      <th class=\"text-uppercase\" mat-header-cell *matHeaderCellDef>\n        Total deaths\n      </th>\n      <td id=\"background-color-danger\" class=\"table-danger text-center dark-theme-class\" mat-cell *matCellDef=\"let element\">\n        {{ element.deathsTotal | renderLongNumbers }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"testsTotal\">\n      <th class=\"text-uppercase\" mat-header-cell *matHeaderCellDef>\n        Total tests\n      </th>\n      <td class=\"text-center\" mat-cell *matCellDef=\"let element\">\n        {{ element.testsTotal | renderLongNumbers }}\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n  </table>\n</div>\n\n<!-- MOBILE VERSION, COUNTRIES DATA-->\n<div class=\"container-fluid\" *ngIf=\"mobile && countriesData\">\n  <div class=\"row justify-content-center\">\n    <mat-form-field>\n      <mat-label>Search by country</mat-label>\n      <input matInput (keyup)=\"applyFilter($event)\" />\n    </mat-form-field>\n  </div>\n  <mat-accordion>\n    <mat-expansion-panel *ngFor=\"let country of worldStats\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          {{ country.country }}\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div class=\"container\">\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Total cases</div>\n          <div class=\"col\">{{ country.casesTotal | renderLongNumbers }}</div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">New cases</div>\n          <div class=\"col\">{{ country.casesNew | renderLongNumbers }}</div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Active cases</div>\n          <div class=\"col\">{{ country.casesActive | renderLongNumbers }}</div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Critical cases</div>\n          <div class=\"col\">\n            {{ country.casesCritical | renderLongNumbers }}\n          </div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Recovered</div>\n          <div class=\"col\">\n            {{ country.casesRecovered | renderLongNumbers }}\n          </div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">New deaths</div>\n          <div class=\"col\">{{ country.deathsNew | renderLongNumbers }}</div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Total deaths</div>\n          <div class=\"col\">{{ country.deathsTotal | renderLongNumbers }}</div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Total tests</div>\n          <div class=\"col\">{{ country.testsTotal | renderLongNumbers }}</div>\n        </div>\n      </div>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n\n<!-- MOBILE VERSION, CUMULATIVE DATA-->\n<div class=\"container-fluid\" *ngIf=\"mobile && continentsData\">\n  <mat-accordion>\n    <mat-expansion-panel *ngFor=\"let country of worldCumulativeStats\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          {{ country.country }}\n        </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div class=\"container\">\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Total cases</div>\n          <div class=\"col\">{{ country.casesTotal | renderLongNumbers }}</div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">New cases</div>\n          <div class=\"col\">{{ country.casesNew | renderLongNumbers }}</div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Active cases</div>\n          <div class=\"col\">{{ country.casesActive | renderLongNumbers }}</div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Critical cases</div>\n          <div class=\"col\">\n            {{ country.casesCritical | renderLongNumbers }}\n          </div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Recovered</div>\n          <div class=\"col\">\n            {{ country.casesRecovered | renderLongNumbers }}\n          </div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">New deaths</div>\n          <div class=\"col\">{{ country.deathsNew | renderLongNumbers }}</div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Total deaths</div>\n          <div class=\"col\">{{ country.deathsTotal | renderLongNumbers }}</div>\n        </div>\n        <div class=\"row border-bottom p-2\">\n          <div class=\"col\">Total tests</div>\n          <div class=\"col\">{{ country.testsTotal | renderLongNumbers }}</div>\n        </div>\n      </div>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n\n<footer-component></footer-component>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}